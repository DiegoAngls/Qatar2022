drive_auth(email = TRUE)
picks <- read_csv("GS1_picks.csv") %>%
pivot_longer(,picks)
View(picks)
View(picks)
picks <- read_csv("GS1_picks.csv") %>%
pivot_longer(names_to = "Match",
values_to = "Pick",3:18)
picks <- read_csv("GS1_picks.csv") %>%
pivot_longer(names_to = "Match",
values_to = "Pick",3:18)
View(picks)
View(picks)
View(picks)
View(picks)
picks <- read_csv("GS1_picks.csv") %>%
pivot_longer(names_to = "Match",
values_to = "Pick",3:18)%>%
group_by(match)
View(matches)
View(picks)
View(picks)
picks <- read_csv("GS1_picks.csv") %>%
pivot_longer(names_to = "Match",
values_to = "Pick",3:18)%>%
nest(-Match)
View(picks)
View(picks)
View(picks[[2]][[1]])
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.))
matches <- read_sheet(matches) %>%
filter(complete.cases(.))
View(matches)
View(matches)
View(matches)
View(matches)
# read the data
options(gargle_oauth_email = TRUE)
drive_auth(email = TRUE)
picks <- read_csv("GS1_picks.csv") %>%
pivot_longer(names_to = "Match",
values_to = "Pick",3:18)%>%
nest(-Match)
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.))
View(matches)
View(matches)
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_local - Goals_visitor))
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_local - Goals_visitor))
View(matches)
View(matches)
picks <- read_csv("GS1_picks.csv") %>%
pivot_longer(names_to = "Match",
values_to = "Pick",3:18)%>%
nest(-Match)
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_local - Goals_visitor))
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
View(matches)
View(matches)
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
matches
Result= matches$Result
library(purrr)
map(1:nrows(matches),x)
map(1:nrows(matches),.x)
map(1:nrows(matches),~.x)
map(1:nrow(matches),~.x)
picks
picks$data[[1]]
map(1:nrow(matches),~function(x) {
map(1:nrow(matches),~function(x) {
logpicks$data[[.x]] == matches$Result[.x]
return(log)}
)
map(1:nrow(matches),~function(.x) {
logpicks$data[[.x]] == matches$Result[.x]
return(log)}
)
map(1:nrow(matches),~function(.x) {
logpicks$data[[.x]] == matches$Result[.x]
return(log)}
)
map(1:nrow(matches),~function(.x) {
log <- picks$data[[.x]] == matches$Result[.x]
return(log)}
)
map(1:nrow(matches),~function(.x) {
log <- picks$data[[.x]] == matches$Result[.x]
return(log)})
x <- map(1:nrow(matches),~function(.x) {
log <- picks$data[[.x]] == matches$Result[.x]
return(log)})
x
Result <-  matches$Result
map(1:length(Result),.x)
map(1:length(Result),~.x)
View(picks)
View(picks)
View(picks[[2]][[1]])
map(1:length(Result),~.x == picks[[.x]]$data$Pick)
map(1:length(Result),~.x== picks[[.x]]$data$Pick)
map(1:length(Result),~.x==picks[[.x]]$data$Pick)
map(1:length(Result),picks[[.x]]$Pick)
map(1:length(Result),~picks[[.x]]$Pick)
map(1:length(Result),~print(picks[[.x]]$Pick))
map(1:length(Result),~print(picks[[.x]]))
map(1:length(Result),~print(picks[[.x]]$Pick))
map(1:length(Result),~print(picks[.x]$Pick))
map(1:length(Result),~print(picks[.x]$`Pick))
View(matches)
View(matches)
View(matches)
View(matches)
View(matches)
map(1:length(Result),~print(picks[[.x]]$`Pick))
map(1:length(Result),~print(picks[[.x]][[5]]))
~print(picks$data[[.x]]$Pick
map(1:length(Result),
map(1:length(Result),
~print(picks$data[[.x]]$Pick))
map(1:length(Result),
~print(picks$data[[.x]]$Pick))
map(1:length(Result),Result[.x] ==picks$data[[.x]]$Pick))
map(1:length(Result),Result[.x] == picks$data[[.x]]$Pick))
map(1:length(Result),~Result[.x] == picks$data[[.x]]$Pick))
map(1:length(Result),~Result[.x] == picks$data[[.x]]$Pick)
View(matches)
View(picks)
View(picks)
picks <- read_csv("GS1_picks.csv")
picks <- read_csv("GS1_picks.csv")
View(picks)
View(picks)
picks <- read_csv("GS1_picks.csv") %>%
select(-Round)
View(picks)
View(picks)
picks[,1] = Result[1]
picks[,1] = Result[1]
picks <- read_csv("GS1_picks.csv") %>%
select(-Round)
picks[,1] ==esult[1]
picks[,1] == Result[1]
picks2 <- select(picks,-1:2)
picks2 <- select(picks,-c(1,2))
View(picks2)
View(picks2)
result <- matches$Result
map(1:length(result),~result[.x])
map(1:length(result),~result[.x] == picks2[,.x])
map_dfc(1:length(result),~result[.x] == picks2[,.x])
scores <- map_dfc(1:length(result),~result[.x] == picks2[,.x])
View(scores)
View(scores)
scores <- map_dfc(1:length(result),~result[.x] == picks2[,.x]) %>%
rowSums()
attach(picks)
scores <- map_dfc(1:length(result),~result[.x] == picks2[,.x]) %>%
rowSums()
picks2
picks2 <- select(picks,-c(1,2)) %>%
as.matrix()
picks2 <- select(picks,-c(1,2)) %>%
matrix()
picks2
picks2 <- select(picks,-c(1,2))
scores <- map_dfc(1:length(result),~result[.x] == picks2[,.x]) %>%
rowSums()
picks
scores
Nombre
data.frame(ID_participante,puntos)
picks$numero_participante
data.frame(numero_participante,Nombre,puntos)
puntos <- map_dfc(1:length(result),~result[.x] == picks2[,.x]) %>%
rowSums()
scores
data.frame(numero_participante,Nombre,puntos)
x <- map_dfc(1:length(result),~result[.x] == picks2[,.x])
x
data.frame(numero_participante,Nombre,puntos)
?write_csv
write_csv(scores,"scores.csv",quote = F)
scores <- data.frame(numero_participante,Nombre,puntos)
write_csv(scores,"scores.csv",quote = F)
write.table(scores,"scores.csv",quote = F,sep=",",row.names = F)
# read the data
options(gargle_oauth_email = TRUE)
drive_auth(email = TRUE)
picks <- read_csv("GS1_picks.csv") %>%
select(-Round)
attach(picks)
detch(picks)
detach(picks)
detech(picks)
detach(picks)
detach(picks)
# read the data
options(gargle_oauth_email = TRUE)
drive_auth(email = TRUE)
picks <- read_csv("GS1_picks.csv") %>%
select(-Round)
attach(picks)
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
result <- matches$Result
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
View(matches)
View(matches)
picks2 <- select(picks,-c(1,2))
picks2
puntos <- map_dfc(1:length(result),~result[.x] == picks2[,.x]) %>%
rowSums()
puntos <- map_dfc(1:length(result),~result[.x] == picks2[,.x]) %>%
rowSums()
result <- matches$Result
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
library(googlesheets4)
library(googledrive)
library(dplyr)
library(tidyr)
library(readr)
library(purrr)
# read the data
options(gargle_oauth_email = TRUE)
drive_auth(email = TRUE)
picks <- read_csv("GS1_picks.csv") %>%
select(-Round)
attach(picks)
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
result <- matches$Result
picks2 <- select(picks,-c(1,2))
puntos <- map_dfc(1:length(result),~result[.x] == picks2[,.x]) %>%
rowSums()
scores <- data.frame(numero_participante,Nombre,puntos)
write.table(scores,"scores.csv",quote = F,sep=",",row.names = F)
source("~/Documents/Qatar2022/score_picks.R")
View(matches)
View(matches)
scores <- data.frame(numero_participante,Nombre,puntos) %>%
arrange(desc(punts))
scores <- data.frame(numero_participante,Nombre,puntos) %>%
arrange(desc(puntos))
View(scores)
View(scores)
write.table(scores,"scores.csv",quote = F,sep=",",row.names = F)
M1 <- matches %>%
filter (Round == "M1")
View(M1)
View(M1)
source("~/Documents/Qatar2022/score_picks.R")
rm(list = ls())
source("~/Documents/Qatar2022/score_picks.R")
M1
M1 <- matches %>%
filter (Round == "M1") %>%
select(Result) %>%
as.vector()
M1 <- map_dfc(1:length(M1),~M1[.x] == picks2[,.x]) %>%
rowSums()
rm(list = ls())
source("~/Documents/Qatar2022/score_picks.R")
source("~/Documents/Qatar2022/score_picks.R")
View(matches)
View(matches)
source("~/Documents/Qatar2022/score_picks.R")
source("~/Documents/Qatar2022/score_picks.R")
View(matches)
View(matches)
View(matches)
View(matches)
View(scores)
View(scores)
M1 <- matches %>%
filter (Round == "M1") %>%
select(Result) %>%
as.vector()
M1
M1 <- map_dfc(1:length(M1),~M1[.x] == picks2[,.x]) %>%
rowSums()
M1
M1 <- map_dfc(1:length(M1),~M1[.x] == picks2[,.x])
M1 <- map_dfc(1:length(M1),~M1[.x] == picks2[,.x]))
M1
library(googlesheets4)
library(googledrive)
library(dplyr)
library(tidyr)
library(readr)
library(purrr)
# read the data
options(gargle_oauth_email = TRUE)
drive_auth(email = TRUE)
picks <- read_csv("GS1_picks.csv") %>%
select(-Round)
attach(picks)
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
picks2 <- select(picks,-c(1,2))
M1 <- matches %>%
filter (Round == "M1") %>%
select(Result) %>%
as.vector()
M1 <- map_dfc(1:length(M1),~M1[.x] == picks2[,.x])
M1
M1 <- map_df(1:length(M1),~M1[.x] == picks2[,.x])
M1 <- map_df(1:length(M1),~M1[.x] == picks2[,.x])
M1 <- matches %>%
filter (Round == "M1") %>%
select(Result) %>%
as.vector()
M1
M1 <- map(1:length(M1),~M1[.x] == picks2[,.x])
M1
M1
M1 <- matches %>%
filter (Round == "M1") %>%
select(Result) %>%
as.vector()
M1 <- matches %>%
filter (Round == "M1") %>%
select(Result) %>%
as.vector() %>%
unlist()
M1
M1 <- map(1:length(M1),~M1[.x] == picks2[,.x])
M1
M1 <- map_dfc(1:length(M1),~M1[.x] == picks2[,.x])
View(M1)
View(M1)
View(M1)
View(M1)
source("~/Documents/Qatar2022/score_picks.R")
M1 <- map_dfc(1:length(M1),~M1[.x] == picks2[,.x])
source("~/Documents/Qatar2022/score_picks.R")
View(M1)
View(M1)
source("~/Documents/Qatar2022/score_picks.R")
scores <- data.frame(numero_participante,Nombre,M1) %>%
group_by (numero_participante) %>%
mutate(Total = sum(M1)) %>%
ungroup %>%
arrange(desc(Total))
View(scores)
View(scores)
source("~/Documents/Qatar2022/score_picks.R")
library(googlesheets4)
library(googledrive)
library(dplyr)
library(tidyr)
library(readr)
library(purrr)
# read the data
options(gargle_oauth_email = TRUE)
drive_auth(email = TRUE)
# Calificar la ronda 1
picks <- read_csv("GS1_picks.csv") %>%
select(-Round)
attach(picks)
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
picks2 <- select(picks,-c(1,2))
M1 <- matches %>%
filter (Round == "M1") %>%
select(Result) %>%
as.vector() %>%
unlist()
M1_all <- map_dfc(1:length(M1),~M1[.x] == picks2[,.x]) %>%
M1 <- rowSums(M1)
?corrplot
library(corrplot)
?corrplot
library(googledrive)
library(googlesheets4)
library(corrplot)
library(viridis)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
options(gargle_oauth_email = TRUE)
drive_auth(email = TRUE)
picks_id <- drive_find(type = "spreadsheet",pattern = "Group_Stage1_respuestas",
n_max = 1)$id
picks <- read_sheet(picks_id) %>%
select(-c(22,23))
picks$numero_participante <- as.character( as.character(picks$numero_participante)) %>%
str_pad(pad = "0", side = "left", width = 3)
bets <- picks[,c(5,4,6:ncol(picks))] %>%
tibble() %>%
arrange(numero_participante) %>%
mutate(Round = "M1")
write.table(bets,"GS1_picks.csv",sep=",",
quote = F,
row.names =F )
bets2 <- pivot_longer(bets,3:ncol(bets),
names_to = "Match",
values_to = "Bet") %>%
nest(-`Match`)
result_pics <- lapply(1:16,function(x){
freqs <- bets2$data[[x]]$Bet %>%
table()
prop <- prop.table(freqs)
return(prop)
}) %>%
setNames(bets2$Match)
png("media/01.picks_stage1.png",width = 20,height = 20,units = "cm",
res = 196)
par(mfrow = c(4,4),
mar = c( 3,3,3,3),
bg = "gray85")
colors <- c("black","tomato3","darkolivegreen")
lapply(1:16, function(x){
Match <- as.character(x) %>%
str_pad(side = "left",pad = "0",width = 2) %>%
paste("flags/matches/Match",.,".png",sep = '')
match_image <- readPNG(Match)
pie(result_pics[[x]],col = colors,
main = names(result_pics)[x],
border = "NA")
}
)
dev.off()
bets2 <- bets[,3:ncol(bets)]
dims <- dim(bets2)
similarities <- matrix(NA, dims[1],dims[1],
dimnames = list(bets$numero_participante,bets$numero_participante))
for (i in 1:nrow(bets2) ){
x <- bets2[i,]
y <- apply(bets2,1,"==",x) %>%
colSums
similarities[i,] <- y
}
similarities <- similarities / 16 * 100
diag(similarities) <- NA
par = c(bg = "gray85")
corrplot(similarities,
method = "color",
col = plasma(50), diag = F,
addgrid.col = T,tl.col = "Black",
order = "hclust",   main = "Similitud entre jugadores",
mar = c(1,1,1,1),cex.main = 1,
is.corr = F,
type = "full",
hclust.method = "ward.D",tl.cex = 1,tl.srt = 45,
number.digits = 0,cl.cex = 0.5)
dev.off()
delta_participants <- colMeans(similarities,na.rm = T)
bets$delta <- delta_participants
top <- bets %>%
arrange(delta) %>%
select(1:2) %>%
head(n = 5)
write.table(top,"top_GS1.csv",
sep = ',',
quote = F,
row.names = F)
source("~/Documents/Qatar2022/generate_picks_GS1.R", echo=TRUE)
getwd()
ls
png(filename = "media/similarities_S1.png",
width = 10,height = 10,units = "cm",res = 196)
par = c(bg = "gray85")
corrplot(similarities,
method = "color",
col = plasma(50), diag = F,
addgrid.col = T,tl.col = "Black",
order = "hclust",   main = "Similitud entre jugadores",
mar = c(1,1,1,1),cex.main = 1,
is.corr = F,
type = "full",
hclust.method = "ward.D",tl.cex = 1,tl.srt = 45,
number.digits = 0,cl.cex = 0.5)
dev.off()
delta_participants <- colMeans(similarities,na.rm = T)
bets$delta <- delta_participants
top <- bets %>%
arrange(delta) %>%
select(1:2) %>%
head(n = 5)
write.table(top,"top_GS1.csv",
sep = ',',
quote = F,
row.names = F)
source("~/Documents/Qatar2022/generate_picks_GS1.R", echo=TRUE)
